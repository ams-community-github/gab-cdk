name: "Comment a Plan on a PR"

on: [pull_request]

permissions:
  contents: read
  pull-requests: write

env:
  ARM_ACCESS_KEY: "${{ secrets.ARM_ACCESS_KEY }}"
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"

jobs:
  terraform-synth:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate module and provider bindings
        run: npm run get

      - name: Synthethize
        run: npm run synth

      - name: Archive cloud formation
        uses: actions/upload-artifact@v3
        with:
          name: tf
          path: cdktf.out/stacks/gab-cdk/cdk.tf.json

  tf-lint:
    needs: terraform-synth
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download Terraform Synth
        uses: actions/download-artifact@v3
        with:
          name: tf
          path: ./
      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}
      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.46.1
      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint with tflint
        run: tflint
        continue-on-error: true

  tf-sec:
    needs: terraform-synth
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download Terraform Synth
        uses: actions/download-artifact@v3
        with:
          name: tf
          path: ./
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          tfsec_formats: sarif
          tfsec_args: --exclude-downloaded-modules
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload to Github Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif.json
          category: tfsec

  terraform:
    name: "Terraform CDK Diff"
    needs: [tf-lint, tf-sec]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Download Terraform Synth
        uses: actions/download-artifact@v3
        with:
          name: tf

      - name: Install dependencies
        run: npm ci

      - name: Generate module and provider bindings
        run: npm run get

      - name: Run Terraform CDK
        uses: hashicorp/terraform-cdk-action@v0.1.0
        with:
          terraformVersion: 1.4.4
          cdktfVersion: 0.15.5
          stackName: gab-cdk
          mode: plan-only
          githubToken: ${{ secrets.GITHUB_TOKEN }}
